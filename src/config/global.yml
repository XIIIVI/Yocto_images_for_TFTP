header:
  version: 5

# Set 'machine' to:
# rpi4tpm for 64-bit Raspberry Pi 4 + TPM
# rpicm4tpm for 64-bit Raspberry Pi Compute Module 4 + TPM
machine: #-MACHINE-#

distro: #-DISTRO-#

target:
  - #-TARGET_IMAGE-#

repos:
  meta-tftp-server:
    layers:
      meta-tftp-server:

  meta-openembedded:
    url: https://git.openembedded.org/meta-openembedded
    path: layers/meta-openembedded
    refspec: #-REF_SPEC-#
    layers:
      meta-oe:
      meta-perl:  
      meta-python:
      meta-networking:
      meta-filesystems:

  meta-iot-cloud:
    url: https://github.com/intel-iot-devkit/meta-iot-cloud.git
    path: layers/meta-iot-cloud
    refspec: #-REF_SPEC-#

  meta-security:
    url: https://git.yoctoproject.org/git/meta-security
    path: layers/meta-security
    refspec: #-REF_SPEC-#

  meta-virtualization:
    url: https://git.yoctoproject.org/git/meta-virtualization
    path: layers/meta-virtualization
    refspec: #-REF_SPEC-#

bblayers_conf_header:
  meta-custom: |
    POKY_BBLAYERS_CONF_VERSION = "2"
    BBPATH = "${TOPDIR}"
    BBFILES ?= ""

local_conf_header:
  z90-global: |
    # Build info
    INHERIT += "image-buildinfo"

    # Timezone
    DEFAULT_TIMEZONE = "Europe/Paris"

    PACKAGE_CLASSES = "package_deb"

    # Solve the connection issue with bitbake
    # Check connectivity using google
    CONNECTIVITY_CHECK_URIS = "https://www.google.com/"
    # Skip connectivity checks
    CONNECTIVITY_CHECK_URIS = ""

    # List of recipes to ignore
    BBMASK += ".*meta-gnome"
    BBMASK += " /meta-iot-cloud/.*/packagegroup-cloud-ibm"
    BBMASK += " /meta-iot-cloud/.*/packagegroup-cloud-aws"

    # Splashscreen support
    SRC_URI_pn-psplash_git = "psplash-poky-img.h.patch"

    EXTRA_IMAGE_FEATURES += "ssh-server-openssh package-management "

    DEVOPS_LOCALE = "fr_FR"
    GLIBC_GENERATE_LOCALES = "fr_FR.UTF-8 en_US.UTF-8"
    IMAGE_LINGUAS = "fr-fr en-us"

    # Docker
    DISTRO_FEATURES_append = " virtualization"
    IMAGE_INSTALL_append = " docker"

    # OpenVPN
    IMAGE_INSTALL_append = " openvpn"

    # Python
    IMAGE_INSTALL_append = " python3"
    IMAGE_INSTALL_append = " python3-pip"
    IMAGE_INSTALL_append = " python3-setuptools-scm"

    # Common utilities
    IMAGE_INSTALL_append = " apt"
    IMAGE_INSTALL_append = " ca-certificates"
    IMAGE_INSTALL_append = " coreutils"
    IMAGE_INSTALL_append = " dynamic-hostname"
    IMAGE_INSTALL_append = " figlet"
    IMAGE_INSTALL_append = " iw"
    IMAGE_INSTALL_append = " nvme-cli"
    IMAGE_INSTALL_append = " os-release"
    IMAGE_INSTALL_append = " p7zip"
    IMAGE_INSTALL_append = " rsync"
    IMAGE_INSTALL_append = " sudo"
    IMAGE_INSTALL_append = " tree"
    IMAGE_INSTALL_append = " tzdata"    

    # Add build infos
    IMAGE_BUILDINFO_VARS_append = " DATETIME DISTRO_NAME IMAGE_BASENAME MACHINE TUNE_PKGARCH" 
    IMAGE_BUILDINFO_VARS_append = " MACHINE_FEATURES DISTRO_FEATURES COMMON_FEATURES IMAGE_FEATURES"
    IMAGE_BUILDINFO_VARS_append = " TUNE_FEATURES TARGET_FPU"
    IMAGE_BUILDINFO_VARS_append = " APP_URI_PREFIX APP_URI_BRANCH"

    # Add the 96board tools (autoexpand on first boot, ...)
    IMAGE_INSTALL_append = " 96boards-tools"